def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
   throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

// plugins {
//     id("com.android.application") version "8.0.0" apply false
//     id("com.android.library") version "8.0.0" apply false
//     id("org.jetbrains.kotlin.android") version "1.5.31" apply false
// }

android {
    namespace "com.example.testproject"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    
    packagingOptions {
        exclude 'META-INF/third_party.java_src.dagger.project.java.dagger.hilt.android_entry_point_accessors.kotlin_module'

        exclude 'META-INF/java.com.google.apps.tiktok.conformance.lint.checks_suppression_annotations.kotlin_module'
    }
    

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.testproject"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
   
}

 android {                                                                                                       
    defaultConfig {                                                                                               
      minSdkVersion 24                                                                                            
    }                                                                                                             
 }
// android {
//     compileOptions {
//         sourceCompatibility 1.8
//         targetCompatibility 1.8
//          }
// }

//     dependencies {
//         // ...
//         // Provides ArFragment, and other UX resources.
//     implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.8.0'

//     // Alternatively, use ArSceneView without the UX dependency.
//     implementation 'com.google.ar.sceneform:core:1.8.0'

       
//     }